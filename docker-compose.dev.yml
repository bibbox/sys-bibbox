networks:
  bibbox-default-network:
    external: true
services:
       
  bibbox-sys-commander-apacheproxy:  #  Apache proxy
    container_name: bibbox-sys-commander-apacheproxy
    restart: unless-stopped
    networks:
      - bibbox-default-network
    build:
      context: ./apacheproxy
      dockerfile: Dockerfile
    volumes:
      - /opt/bibbox/proxy/sites:/usr/local/apache2/conf/sites
      - /opt/bibbox/sys-bibbox/frontend/dist/sys-bibbox-client:/var/www/html/sys-bibbox-client
    ports:
      - "80:80"
      - "443:443"

  bibbox-sys-commander-backend:   # BACKEND
    container_name: bibbox-sys-commander-backend
    restart: unless-stopped
    networks:
      - bibbox-default-network
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "5010:5000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /opt/bibbox:/opt/bibbox
      - ./backend:/usr/src/bibbox-sys-commander/backend
      - ./data/db_init_done:/db_init_done
    env_file:
      - .env
    depends_on:
      bibbox-sys-commander-redis:
        condition: service_started
      bibbox-sys-commander-celery:
        condition: service_healthy
      bibbox-sys-commander-postgres:
        condition: service_healthy

  bibbox-sys-commander-celery:       # CELERY    -alias celery
    container_name:  bibbox-sys-commander-celery
    restart: unless-stopped
    networks:
      bibbox-default-network:
         aliases:
           - celery
    build:
      context: ./backend
      dockerfile: Dockerfile
    command: bash -c 'celery -A celery_worker.app_celerey worker -l INFO'
    volumes:
      - ./data/celery:/queue
      - /var/run/docker.sock:/var/run/docker.sock
      - /opt/bibbox:/opt/bibbox
      - ./backend:/usr/src/bibbox-sys-commander/backend
    env_file:
      - .env
    depends_on:
      bibbox-sys-commander-keycloak:
        condition: service_healthy
    healthcheck:
       test: ["CMD-SHELL", "celery inspect ping"]
       interval: 15s
       timeout: 10s
       retries: 8

  bibbox-sys-commander-celery-monitor:    # CELERY MONITOR
    container_name: bibbox-sys-commander-celery-monitor
    build:
      context: ./backend
      dockerfile: Dockerfile
    networks:
      - bibbox-default-network
    restart: unless-stopped
    ports:
      - "5011:5555"
    command:  celery -A celery_worker.app_celerey flower --port=5555
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
    depends_on:
      bibbox-sys-commander-redis:
        condition: service_started
      bibbox-sys-commander-celery:
        condition: service_healthy
    volumes:
      - ./data/celery:/queue
      - ./backend:/usr/src/bibbox-sys-commander/backend
      - /opt/bibbox:/opt/bibbox

  bibbox-sys-commander-postgres:      # POSTGRES DB     -alias postgres
    container_name:  bibbox-sys-commander-postgres
    restart: unless-stopped
    networks:
       bibbox-default-network:
         aliases:
           - postgres
    build:
      context: ./postgresql
      dockerfile: Dockerfile
    ports:
      - "5432:5432"
    volumes:
      - ./data/postgresql/data:/var/lib/postgresql/data
    env_file:
      - .env
    healthcheck:
       test: ["CMD-SHELL", "sh -c 'pg_isready -U ${POSTGRES_USER} -d ${DB_NAME}'"]
       interval: 15s
       timeout: 10s
       retries: 8

  bibbox-sys-commander-redis:          # REDIS     -alias redis
    container_name: bibbox-sys-commander-redis
    image: redis
    networks:
      bibbox-default-network:
         aliases:
           - redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - ./data/redis/data:/data
    env_file:
      - .env


  bibbox-sys-commander-adminer:      #ADMINER
    container_name:  bibbox-sys-commander-adminer
    networks:
      - bibbox-default-network
    image: adminer
    restart: unless-stopped
    ports:
      - "5012:8080"
    environment:
      ADMINER_DEFAULT_DB_DRIVER: pgsql
      ADMINER_DEFAULT_DB_HOST: postgres
      ADMINER_DEFAULT_DB_NAME: bibbox


  bibbox-sys-commander-cadvisor:     # CADVISOR
    container_name: bibbox-sys-commander-cadvisor
    image: gcr.io/cadvisor/cadvisor
    networks:
      - bibbox-default-network
    restart: unless-stopped
    ports:
      - "5013:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /dev/disk/:/dev/disk:ro

  bibbox-sys-commander-keycloak:         # KEYCLOAK     
    container_name: bibbox-sys-commander-keycloak
    image: bitnami/keycloak
    restart: unless-stopped
    ports:
      - "5014:8080"
    networks:
      - bibbox-default-network
    environment:
      - KEYCLOAK_CREATE_ADMIN_USER=true
      - DB_ADDR=bibbox-sys-commander-postgres
      - DB_DATABASE=keycloak
      - DB_USER=keycloak
      - DB_PASSWORD=keycloak
      - DB_SCHEMA=public
      # for changing the themes add --spi-theme-static-max-age=-1 --spi-theme-cache-themes=false --spi-theme-cache-templates=false to the extra args command below.
      - KEYCLOAK_EXTRA_ARGS=--import-realm --health-enabled=true
    volumes:
     - ./keycloak/realms/realm-export.json:/opt/bitnami/keycloak/data/import/realm-export.json
     - ./keycloak/themes:/opt/bitnami/keycloak/themes
    env_file: 
        - .env
    healthcheck:
       test: ["CMD-SHELL", "curl --head -fsS http://localhost:8080/health/ready"]
       interval: 15s
       timeout: 10s
       retries: 8
    depends_on:
      bibbox-sys-commander-postgres:
          condition: service_healthy

  bibbox-sys-commander-master-fdp:       # FDP
    image: fairdata/fairdatapoint:1.13.2
    container_name: bibbox-sys-commander-master-fdp
    restart: unless-stopped
    networks:
      - bibbox-default-network
    ports:
      - "8080:80"
    volumes:
      - ./fdp-configs/application.yml:/fdp/application.yml:ro
    env_file:
      - fdp-configs/fdp.env.template


  bibbox-sys-commander-master-fdp-client:     # FDP CLIENT  - alias fdp
    image: fairdata/fairdatapoint-index-client:1.13
    container_name: bibbox-sys-commander-master-fdp-client
    restart: unless-stopped
    ports:
      - "8088:80"
    environment:
      - FDP_HOST=fdp
    networks:
      bibbox-default-network:
         aliases:
           - fdp

  bibbox-sys-commander-master-fdp-mongo:     # MONGO DB      -alias mongo
    image: mongo:4.0.12
    container_name: bibbox-sys-commander-master-fdp-mongo
    restart: unless-stopped
    volumes:
      - ./data/mongo/data:/data/db
    networks:
      bibbox-default-network:
         aliases:
           - mongo

  bibbox-sys-commander-master-fdp-blazegraph:    # BLAZEGRAPH     - alias blazegraph
    image: metaphacts/blazegraph-basic:2.2.0-20160908.003514-6-jetty9.4.44-jre8-45dbfff
    container_name: bibbox-sys-commander-master-fdp-blazegraph
    restart: unless-stopped
    volumes:
      - ./data/blazegraph:/blazegraph-data
    networks:
      bibbox-default-network:
         aliases:
           - blazegraph
