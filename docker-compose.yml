version: '3'

networks:
  bibbox-default-network:
    external: true
services:

  bibbox-sys-commander-apacheproxy:
    container_name: bibbox-sys-commander-apacheproxy
    restart: unless-stopped
    networks:
      - bibbox-default-network
    image: bibbox/bibbox-sys-commander-apacheproxy:latest
    volumes:
      - /opt/bibbox/proxy/sites:/usr/local/apache2/conf/sites
      - /opt/bibbox/proxy/letsencrypt:/etc/letsencrypt
      - /opt/bibbox/sys-bibbox/frontend/dist/sys-bibbox-client:/var/www/html/sys-bibbox-client
    ports:
      - "80:80"
      - "443:443"
    environment:
      - DOMAINNAME=${DOMAINNAME:-demo.bibbox.org}
      - EMAIL=${EMAIL:-backoffice.bibbox@gmail.com}
    hostname: ${DOMAINNAME:-demo.bibbox.org}

  #  bibbox-sys-commander-nginx:
  #    container_name: bibbox-sys-commander-nginx
  #    restart: unless-stopped
  #    networks:
  #    - bibbox-default-network
  #    image: nginx
  #    links:
  #        -  bibbox-sys-commander-backend:backend
  #    build:
  #      context:    ./nginx
  #      dockerfile: Dockerfile
  #    volumes:
  #      - ./client/dist:/usr/share/nginx/html
  #      - ./proxy-configs/nginx.conf:/etc/nginx/nginx.conf
  #      - /opt/bibbox:/opt/bibbox
  #    ports:
  #      - "8080:80"
  #    depends_on:
  #      -  bibbox-sys-commander-backend


  bibbox-sys-commander-backend:
    container_name: bibbox-sys-commander-backend
    restart: unless-stopped
    networks:
      - bibbox-default-network
    links:
      -  bibbox-sys-commander-redis:redis
      -  bibbox-sys-commander-celery:celery
      -  bibbox-sys-commander-postgres:postgres
    image: bibbox/bibbox-sys-commander-backend:latest
    ports:
      - "5010:5000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /opt/bibbox:/opt/bibbox
      - ./backend:/usr/src/bibbox-sys-commander/backend
    env_file:
      - .env
    depends_on:
      -  bibbox-sys-commander-redis
      -  bibbox-sys-commander-celery
      -  bibbox-sys-commander-postgres
      -  bibbox-sys-commander-keycloak

  bibbox-sys-commander-celery:
    container_name:  bibbox-sys-commander-celery
    restart: unless-stopped
    networks:
      - bibbox-default-network
    links:
      -  bibbox-sys-commander-redis:redis
      -  bibbox-sys-commander-postgres:postgres
    image: bibbox/bibbox-sys-commander-backend:latest
    command: "celery -A celery_worker.app_celerey worker -l INFO"
    volumes:
      - ./data/celery:/queue
      - /var/run/docker.sock:/var/run/docker.sock
      - /opt/bibbox:/opt/bibbox
      - ./backend:/usr/src/bibbox-sys-commander/backend
    env_file:
      - .env
    depends_on:
      - bibbox-sys-commander-keycloak

  # bibbox-sys-commander-celery-beat:
  #   container_name:  bibbox-sys-commander-celery
  #   restart: unless-stopped
  #   networks:
  #   - bibbox-default-network
  #   links:
  #       -  bibbox-sys-commander-redis:redis
  #       -  bibbox-sys-commander-postgres:postgres
  #   build:
  #     context:    ./backend
  #     dockerfile: Dockerfile
  #   command: "celery beat -A celery_beat.app_celerey --loglevel=info"
  #   volumes:
  #     - ./data/celery:/queue
  #     - /var/run/docker.sock:/var/run/docker.sock
  #     - /opt/bibbox:/opt/bibbox
  #     - ./backend:/usr/src/bibbox-sys-commander/backend
  #   env_file:
  #      - .env

  bibbox-sys-commander-celery-monitor:
    container_name: bibbox-sys-commander-celery-monitor
    image: bibbox/bibbox-sys-commander-backend:latest
    networks:
      - bibbox-default-network
    links:
      -  bibbox-sys-commander-redis:redis
    restart: unless-stopped
    ports:
      - "5011:5555"
    entrypoint: celery flower
    #command:  -celery A celery_worker.app_celerey --port=5555 --broker=redis://redis:6379/0
    command:  --app celery_worker.app_celerey --port=5555 --broker=redis://redis:6379/0
    depends_on:
      - bibbox-sys-commander-redis
    volumes:
      - ./data/celery:/queue
      - ./backend:/usr/src/bibbox-sys-commander/backend
      - /opt/bibbox:/opt/bibbox

  bibbox-sys-commander-postgres:
    container_name:  bibbox-sys-commander-postgres
    restart: unless-stopped
    networks:
      - bibbox-default-network
    image: bibbox/bibbox-sys-commander-postgres:latest
    ports:
      - "5432:5432"
    volumes:
      - ./data/postgresql/data:/var/lib/postgresql/data
    env_file:
      - .env

  bibbox-sys-commander-redis:
    container_name: bibbox-sys-commander-redis
    image: redis
    networks:
      - bibbox-default-network
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - ./data/redis/data:/data
    env_file:
      - .env


  bibbox-sys-commander-adminer:
    container_name:  bibbox-sys-commander-adminer
    networks:
      - bibbox-default-network
    image: adminer
    restart: unless-stopped
    links:
      - bibbox-sys-commander-postgres:postgres
        # - bibbox-sys-commander-keycloak-postgres:postgres
    ports:
      - "5012:8080"
    environment:
      ADMINER_DEFAULT_DB_DRIVER: pgsql
      ADMINER_DEFAULT_DB_HOST: postgres
      ADMINER_DEFAULT_DB_NAME: bibbox


  bibbox-sys-commander-cadvisor:      
      container_name: bibbox-sys-commander-cadvisor
      image: gcr.io/cadvisor/cadvisor
      networks:
      - bibbox-default-network
      restart: unless-stopped
      ports:
        - "5013:8080"  
      volumes:
        - /:/rootfs:ro 
        - /var/run:/var/run:ro 
        - /sys:/sys:ro 
        - /var/lib/docker/:/var/lib/docker:ro 
        - /var/run/docker.sock:/var/run/docker.sock:ro 
        - /dev/disk/:/dev/disk:ro 


  bibbox-sys-commander-keycloak:
      container_name: bibbox-sys-commander-keycloak
      image: jboss/keycloak
      networks:
      - bibbox-default-network
      restart: unless-stopped
      ports:
        - "5014:8080"
      environment:
        DB_VENDOR: postgres
        DB_ADDR: bibbox-sys-commander-postgres
        DB_DATABASE: keycloak
        DB_USER: keycloak
        DB_PASSWORD: keycloak
        KEYCLOAK_IMPORT: /opt/jboss/keycloak/import/realms/realm-export.json # path to realm file in container
        DB_WAIT_TIMEOUT: 180 # wait for postgres to initialize
        DB_SCHEMA: public # use the public schema
        JBOSS_CLI: "/opt/jboss/keycloak/bin/jboss-cli.sh"
 #       PROXY_ADDRESS_FORWARDING: "true"
 #       REDIRECT_SOCKET: "proxy-https"
 #       KEYCLOAK_FRONTEND_URL: e.g. https://keycloak.demo.bibbox.org/auth

      env_file: # we want to read some variables from the .env file as they are shared with the backend
        - .env

      volumes:
        - ./keycloak/realms/realm-export.json:/opt/jboss/keycloak/import/realms/realm-export.json
        - ./keycloak/themes/custom/:/opt/jboss/keycloak/themes/custom
        - ./keycloak/disable-theme-cache.cli:/opt/jboss/startup-scripts/disable-theme-cache.cli
      command: [
        "-Dkeycloak.profile.feature.upload_scripts=enabled",
        "-Dkeycloak.migration.action=import",
        "-Dkeycloak.migration.provider=singleFile",
        "-Dkeycloak.migration.file=/opt/jboss/keycloak/import/realms/realm-export.json",
        "-Dkeycloak.migration.strategy=IGNORE_EXISTING" # this will only import the realm if it does not exist yet, if there are changes to the realm, the container needs to be deleted and recreated (this also deletes users)
        ]
      depends_on:
        - bibbox-sys-commander-postgres
  bibbox-sys-commander-master-fdp:
    image: fairdata/fairdatapoint:1.13.2
    container_name: bibbox-sys-commander-master-fdp
    restart: unless-stopped
    networks:
      - bibbox-default-network
    ports:
      - "8080:80"
    volumes:
      - ./fdp-configs/application.yml:/fdp/application.yml:ro
    links:
      - bibbox-sys-commander-master-fdp-blazegraph:blazegraph
      - bibbox-sys-commander-master-fdp-mongo:mongo
    env_file:
      - fdp-configs/fdp.env.template


  bibbox-sys-commander-master-fdp-client:
    image: fairdata/fairdatapoint-index-client:1.13
    container_name: bibbox-sys-commander-master-fdp-client
    ports:
      - "8088:80"
    environment:
      - FDP_HOST=fdp
    links:
      - bibbox-sys-commander-master-fdp:fdp
    networks:
      - bibbox-default-network

  bibbox-sys-commander-master-fdp-mongo:
    image: mongo:4.0.12
    container_name: bibbox-sys-commander-master-fdp-mongo
    volumes:
      - ./data/mongo/data:/data/db
    networks:
      - bibbox-default-network

  bibbox-sys-commander-master-fdp-blazegraph:
    image: metaphacts/blazegraph-basic:2.2.0-20160908.003514-6
    container_name: bibbox-sys-commander-master-fdp-blazegraph
    volumes:
      - ./data/blazegraph:/blazegraph-data
    networks:
      - bibbox-default-network
